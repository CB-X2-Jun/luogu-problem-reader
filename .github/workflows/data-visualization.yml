name: Data Visualization & Analytics

on:
  schedule:
    # 每周生成数据可视化报告 (周五UTC 04:00)
    - cron: '0 4 * * 5'
  workflow_dispatch: # 手动触发
    inputs:
      chart_types:
        description: '生成图表类型'
        required: false
        default: 'all'
        type: choice
        options:
        - 'all'
        - 'difficulty_distribution'
        - 'tag_cloud'
        - 'trend_analysis'
        - 'heatmap'
      output_format:
        description: '输出格式'
        required: false
        default: 'svg'
        type: choice
        options:
        - 'svg'
        - 'png'
        - 'html'
      include_interactive:
        description: '包含交互式图表'
        required: false
        default: true
        type: boolean

jobs:
  data-visualization:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install visualization dependencies
      run: |
        python -m pip install --upgrade pip
        pip install matplotlib seaborn plotly wordcloud pandas numpy
        pip install requests beautifulsoup4 markdown markdownify pygments
    
    - name: Generate Problem Statistics Charts
      env:
        CHART_TYPES: ${{ github.event.inputs.chart_types || 'all' }}
        OUTPUT_FORMAT: ${{ github.event.inputs.output_format || 'svg' }}
      run: |
        python scripts/generate_charts.py
    
    - name: Create Interactive Dashboard
      if: ${{ github.event.inputs.include_interactive != 'false' }}
      run: |
        python scripts/create_dashboard.py
    
    - name: Generate Trend Analysis
      run: |
        python scripts/trend_analyzer.py
    
    - name: Update Visualization Page
      run: |
        python scripts/update_viz_page.py
    
    - name: Commit visualization updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --staged --quiet || git commit -m "📊 Data visualization update: $(date '+%Y-%m-%d')"
        git push
